# -*- coding: utf-8 -*-
"""Cross Validation using python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MbhQMTPISVQBgIXKLqnslnwKA0SNvwak

importing the dependencies
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.metrics import accuracy_score

"""importing models"""

from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier

"""Data pre-processing"""

heart_data = pd.read_csv('/content/heart_disease_data.csv')

heart_data.isnull().sum()

heart_data['target'].value_counts()

"""#Train Test Split """

X = heart_data.drop(columns='target',axis=1)
Y = heart_data['target']

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,stratify=Y,random_state=3,test_size=0.2)
print(X.shape,X_train.shape,X_test.shape)

"""#Models performance"""

models = [LogisticRegression(max_iter=1000),SVC(kernel='linear'),KNeighborsClassifier(),RandomForestClassifier()]

def compare_train_test_models():
  for m in models:
    m.fit(X_train,Y_train)
    test_prediction = m.predict(X_test)
    acc_score = accuracy_score(test_prediction,Y_test)
    print("Accuracy of test using model ",m," is : ",acc_score)

compare_train_test_models()

"""#Cross Validation"""

cv_score = cross_val_score(LogisticRegression(max_iter=1000),X,Y,cv=5)
cv_score_mean = round((sum(cv_score)/len(cv_score))*100,2)
print(cv_score_mean)

cv_score = cross_val_score(SVC(kernel='linear'),X,Y,cv=5)
cv_score_mean = round((sum(cv_score)/len(cv_score))*100,2)
print(cv_score_mean)

cv_score = cross_val_score(KNeighborsClassifier(),X,Y,cv=5)
cv_score_mean = round((sum(cv_score)/len(cv_score))*100,2)
print(cv_score_mean)

cv_score = cross_val_score(RandomForestClassifier(),X,Y,cv=5)
cv_score_mean = round((sum(cv_score)/len(cv_score))*100,2)
print(cv_score_mean)

"""#Defining a function for cross validation"""

models = [LogisticRegression(max_iter=1000),SVC(kernel='linear'),KNeighborsClassifier(),RandomForestClassifier()]

def compare_cv():
  for m in models:
    cv_score = cross_val_score(m,X,Y,cv=5)
    mean_acc = round(sum(cv_score)*100/len(cv_score),2)
    print("CV Score for ",m," is ",mean_acc)

compare_cv()

